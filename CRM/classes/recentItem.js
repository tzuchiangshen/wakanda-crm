//RecentItem data class methods.model.RecentItem = {};//*** Methods//Entity Methods.model.RecentItem.entityMethods = {};//Class methods.model.RecentItem.methods = {};model.RecentItem.methods.removeOldRecentItems = function() {	var oldRecentItemsCollection = ds.RecentItem.query("sortOrder > 5");	oldRecentItemsCollection.remove();};model.RecentItem.methods.reorderItems = function() {	var recentItemsCollection = ds.RecentItem.all();	recentItemsCollection.forEach(function(recentItemEntity) {		recentItemEntity.sortOrder += 1;	});		ds.RecentItem.removeOldRecentItems();};//Class methods scope.model.RecentItem.methods.reorderItems.scope ="public";//Eventsmodel.RecentItem.events = {};//onRestrictingQuery()model.RecentItem.events.onRestrictingQuery = function() {		var myCurrentUser = currentUser(), // Get the current user		//myUser = ds.User.find("ID = :1", myCurrentUser.ID);				//result = ds.RecentItem.createEntityCollection();		result = ds.RecentItem.all();		//result = ds.RecentItem.query("owner.ID = :1", myUser.ID);		return result;};//onInit()model.RecentItem.events.onInit = function() {	var myCurrentUser = currentUser(), // we get the user of the current session.		myUser = ds.User.find("ID = :1", myCurrentUser.ID);		if ((myCurrentUser !== null) && (myUser !== null)) {//if a user is logged in.				this.owner = myUser;	}};